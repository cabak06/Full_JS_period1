{
  "{\"sourceRoot\":\"C:\\\\Users\\\\cahit\\\\Desktop\\\\week4\\\\my-own\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cahit\\\\Desktop\\\\week4\\\\my-own\",\"filename\":\"C:\\\\Users\\\\cahit\\\\Desktop\\\\week4\\\\my-own\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cahit\\\\Desktop\\\\week4\\\\my-own\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cahit\\Desktop\\week4\\my-own\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cahit\\Desktop\\week4\\my-own",
      "filename": "C:\\Users\\cahit\\Desktop\\week4\\my-own\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cahit\\Desktop\\week4\\my-own",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cahit\\Desktop\\week4\\my-own\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cahit\\Desktop\\week4\\my-own\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cahit\\Desktop\\week4\\my-own\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nrequire(\"core-js/proposals/promise-any\");\n\nvar fetch = _interopRequireWildcard(require(\"node-fetch\"));\n\nvar crypto = _interopRequireWildcard(require(\"crypto\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar secureRandoms = {\n  title: '6 secure randoms',\n  randoms: []\n};\n\nfunction makeSecureRandom(size) {\n  return new Promise(function (resolve, reject) {\n    crypto.randomBytes(size, function (err, buffer) {\n      var error = false;\n\n      if (error) {\n        reject(new Error(\"Too Bad\"));\n      }\n\n      resolve({\n        length: size,\n        buffer: buffer.toString('hex')\n      });\n    });\n  });\n} //using promise(all)\n\n\nvar executeRandomSecurePromises_all = function execute() {\n  Promise.all([makeSecureRandom(48), makeSecureRandom(40), makeSecureRandom(32)]).then(function (dataList) {\n    dataList.forEach(function (data) {\n      secureRandoms.randoms.push({\n        length: data.length,\n        random: data.buffer\n      });\n    });\n    console.log(secureRandoms);\n  });\n}; // Using promise(any)\n\n\nvar executeRandomSecurePromises_any = function execute() {\n  var promises = [makeSecureRandom(48), makeSecureRandom(40), makeSecureRandom(32)];\n  Promise.any(promises).then(function (value) {\n    return console.log(value);\n  });\n};\n\nfunction fetchChuckJoke() {\n  try {\n    var joke = fetch('https://api.chucknorris.io/jokes/random').then(function (res) {\n      return res.json();\n    });\n    return joke;\n  } catch (err) {\n    console.log('Error ', err);\n  } finally {//console.log()\n  }\n}\n\nfunction printJoke() {\n  var jokes = [];\n  var joke1 = fetchChuckJoke();\n  var joke2 = fetchChuckJoke();\n  var joke3 = fetchChuckJoke();\n  Promise.all([joke1, joke2, joke3]).then(function (dataList) {\n    dataList.forEach(function (data) {\n      jokes.push(data.value);\n    });\n    console.log(jokes);\n  });\n}\n\nvar anyone = function anyone() {\n  var joke1 = fetchChuckJoke();\n  var joke2 = fetchChuckJoke();\n  var joke3 = fetchChuckJoke();\n  var promises = [joke1, joke2, joke3];\n  Promise.any(promises).then(function (data) {\n    return console.log(data.value);\n  });\n};\n\nprintJoke();\nanyone(); //executeRandomSecurePromises_all();\n//executeRandomSecurePromises_any();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNlY3VyZVJhbmRvbXMiLCJ0aXRsZSIsInJhbmRvbXMiLCJtYWtlU2VjdXJlUmFuZG9tIiwic2l6ZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiY3J5cHRvIiwicmFuZG9tQnl0ZXMiLCJlcnIiLCJidWZmZXIiLCJlcnJvciIsIkVycm9yIiwibGVuZ3RoIiwidG9TdHJpbmciLCJleGVjdXRlUmFuZG9tU2VjdXJlUHJvbWlzZXNfYWxsIiwiZXhlY3V0ZSIsImFsbCIsInRoZW4iLCJkYXRhTGlzdCIsImZvckVhY2giLCJkYXRhIiwicHVzaCIsInJhbmRvbSIsImNvbnNvbGUiLCJsb2ciLCJleGVjdXRlUmFuZG9tU2VjdXJlUHJvbWlzZXNfYW55IiwicHJvbWlzZXMiLCJhbnkiLCJ2YWx1ZSIsImZldGNoQ2h1Y2tKb2tlIiwiam9rZSIsImZldGNoIiwicmVzIiwianNvbiIsInByaW50Sm9rZSIsImpva2VzIiwiam9rZTEiLCJqb2tlMiIsImpva2UzIiwiYW55b25lIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVBLElBQUlBLGFBQWEsR0FBRztBQUNoQkMsRUFBQUEsS0FBSyxFQUFFLGtCQURTO0FBRWhCQyxFQUFBQSxPQUFPLEVBQUU7QUFGTyxDQUFwQjs7QUFLQyxTQUFTQyxnQkFBVCxDQUEwQkMsSUFBMUIsRUFBK0I7QUFDNUIsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFTQyxNQUFULEVBQWtCO0FBQ2pDQyxJQUFBQSxNQUFNLENBQUNDLFdBQVAsQ0FBbUJMLElBQW5CLEVBQXlCLFVBQVNNLEdBQVQsRUFBY0MsTUFBZCxFQUFzQjtBQUMzQyxVQUFJQyxLQUFLLEdBQUcsS0FBWjs7QUFDQSxVQUFHQSxLQUFILEVBQVM7QUFDUEwsUUFBQUEsTUFBTSxDQUFDLElBQUlNLEtBQUosQ0FBVSxTQUFWLENBQUQsQ0FBTjtBQUNEOztBQUNBUCxNQUFBQSxPQUFPLENB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Q0FBakI7QUFDQW5DLEVBQUFBLE9BQU8sQ0FBQ3dCLEdBQVIsQ0FBWUQsUUFBWixFQUFzQlQsSUFBdEIsQ0FBMkIsVUFBQ0csSUFBRDtBQUFBLFdBQVVHLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixJQUFJLENBQUNRLEtBQWpCLENBQVY7QUFBQSxHQUEzQjtBQUNILENBUEQ7O0FBVUFNLFNBQVM7QUFDVEssTUFBTSxHLENBS047QUFDQSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGNhaGl0XFxEZXNrdG9wXFx3ZWVrNFxcbXktb3duXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCJjb3JlLWpzL3Byb3Bvc2Fscy9wcm9taXNlLWFueVwiXHJcbmltcG9ydCAqIGFzIGZldGNoIGZyb20gJ25vZGUtZmV0Y2gnO1xyXG5pbXBvcnQgKiBhcyBjcnlwdG8gZnJvbSAnY3J5cHRvJztcclxuXHJcbnZhciBzZWN1cmVSYW5kb21zID0ge1xyXG4gICAgdGl0bGU6ICc2IHNlY3VyZSByYW5kb21zJyxcclxuICAgIHJhbmRvbXM6IFtdXHJcbn07XHJcblxyXG4gZnVuY3Rpb24gbWFrZVNlY3VyZVJhbmRvbShzaXplKXtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSxyZWplY3QpPT57XHJcbiAgICAgICAgY3J5cHRvLnJhbmRvbUJ5dGVzKHNpemUsIGZ1bmN0aW9uKGVyciwgYnVmZmVyKSB7XHJcbiAgICAgICAgICAgIGxldCBlcnJvciA9IGZhbHNlO1xyXG4gICAgICAgICAgICBpZihlcnJvcil7XHJcbiAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihcIlRvbyBCYWRcIikpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICByZXNvbHZlKHtsZW5ndGg6IHNpemUsIGJ1ZmZlcjogYnVmZmVyLnRvU3RyaW5nKCdoZXgnKX0pO1xyXG4gICAgICAgICB9KTtcclxuICAgIH0pXHJcbiB9XHJcblxyXG4gLy91c2luZyBwcm9taXNlKGFsbClcclxuIGNvbnN0IGV4ZWN1dGVSYW5kb21TZWN1cmVQcm9taXNlc19hbGwgPSAgZnVuY3Rpb24gZXhlY3V0ZSgpe1xyXG4gICAgUHJvbWlzZS5hbGwoW21ha2VTZWN1cmVSYW5kb20oNDgpLG1ha2VTZWN1cmVSYW5kb20oNDApLG1ha2VTZWN1cmVSYW5kb20oMzIpXSlcclxuICAgIC50aGVuKGRhdGFMaXN0PT57XHJcbiAgICAgICAgZGF0YUxpc3QuZm9yRWFjaChkYXRhPT57XHJcbiAgICAgICAgICAgIHNlY3VyZVJhbmRvbXMucmFuZG9tcy5wdXNoKHtsZW5ndGg6IGRhdGEubGVuZ3RoLCByYW5kb206ICBkYXRhLmJ1ZmZlcn0pOyBcclxuICAgICAgICAgICBcclxuICAgICAgICB9KVxyXG4gICAgICAgIGNvbnNvbGUubG9nKHNlY3VyZVJhbmRvbXMpO1xyXG4gICAgfSlcclxuIH1cclxuXHJcbi8vIFVzaW5nIHByb21pc2UoYW55KVxyXG4gY29uc3QgZXhlY3V0ZVJhbmRvbVNlY3VyZVByb21pc2VzX2FueSA9ICBmdW5jdGlvbiBleGVjdXRlKCl7XHJcbiAgICBjb25zdCBwcm9taXNlcyA9IFttYWtlU2VjdXJlUmFuZG9tKDQ4KSxtYWtlU2VjdXJlUmFuZG9tKDQwKSxtYWtlU2VjdXJlUmFuZG9tKDMyKV1cclxuICAgIFByb21pc2UuYW55KHByb21pc2VzKS50aGVuKCh2YWx1ZSkgPT4gY29uc29sZS5sb2codmFsdWUpKTsgICAgXHJcbiB9XHJcbiBcclxuXHJcblxyXG5cclxuIGZ1bmN0aW9uIGZldGNoQ2h1Y2tKb2tlKCl7XHJcbiAgICB0cnl7XHJcbiAgICBsZXQgam9rZSA9ICBmZXRjaCgnaHR0cHM6Ly9hcGkuY2h1Y2tub3JyaXMuaW8vam9rZXMvcmFuZG9tJykudGhlbihyZXMgPT57IHJldHVybiByZXMuanNvbigpfSk7ICBcclxuICAgIHJldHVybiBqb2tlO1xyXG4gICAgfWNhdGNoIChlcnIpIHtcclxuICAgICBjb25zb2xlLmxvZygnRXJyb3IgJyxlcnIpO1xyXG4gICAgfWZpbmFsbHl7XHJcbiAgICAgLy9jb25zb2xlLmxvZygpXHJcbiAgICB9ICAgXHJcbiAgfVxyXG5cclxuXHJcblxyXG5mdW5jdGlvbiBwcmludEpva2UoKSB7XHJcbiAgICB2YXIgam9rZXMgPSBbXTtcclxuICAgIGNvbnN0IGpva2UxID0gZmV0Y2hDaHVja0pva2UoKTtcclxuICAgIGNvbnN0IGpva2UyID0gZmV0Y2hDaHVja0pva2UoKTtcclxuICAgIGNvbnN0IGpva2UzID0gZmV0Y2hDaHVja0pva2UoKTtcclxuICAgIFByb21pc2UuYWxsKFtqb2tlMSxqb2tlMixqb2tlM10pXHJcbiAgICAudGhlbihkYXRhTGlzdD0+e1xyXG4gICAgICAgIGRhdGFMaXN0LmZvckVhY2goZGF0YSA9PntcclxuICAgICAgICAgICAgam9rZXMucHVzaChkYXRhLnZhbHVlKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIGNvbnNvbGUubG9nKGpva2VzKTtcclxuICAgIH0pXHJcbiBcclxuICB9XHJcblxyXG5sZXQgYW55b25lID0gKCkgPT57XHJcbiAgICBjb25zdCBqb2tlMSA9IGZldGNoQ2h1Y2tKb2tlKCk7XHJcbiAgICBjb25zdCBqb2tlMiA9IGZldGNoQ2h1Y2tKb2tlKCk7XHJcbiAgICBjb25zdCBqb2tlMyA9IGZldGNoQ2h1Y2tKb2tlKCk7XHJcblxyXG4gICAgY29uc3QgcHJvbWlzZXMgPSBbam9rZTEsam9rZTIsam9rZTNdO1xyXG4gICAgUHJvbWlzZS5hbnkocHJvbWlzZXMpLnRoZW4oKGRhdGEpID0+IGNvbnNvbGUubG9nKGRhdGEudmFsdWUpKTtcclxufVxyXG5cclxuICAgIFxyXG5wcmludEpva2UoKTtcclxuYW55b25lKCk7XHJcblxyXG5cclxuXHJcblxyXG4vL2V4ZWN1dGVSYW5kb21TZWN1cmVQcm9taXNlc19hbGwoKTtcclxuLy9leGVjdXRlUmFuZG9tU2VjdXJlUHJvbWlzZXNfYW55KCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "secureRandoms",
        "title",
        "randoms",
        "makeSecureRandom",
        "size",
        "Promise",
        "resolve",
        "reject",
        "crypto",
        "randomBytes",
        "err",
        "buffer",
        "error",
        "Error",
        "length",
        "toString",
        "executeRandomSecurePromises_all",
        "execute",
        "all",
        "then",
        "dataList",
        "forEach",
        "data",
        "push",
        "random",
        "console",
        "log",
        "executeRandomSecurePromises_any",
        "promises",
        "any",
        "value",
        "fetchChuckJoke",
        "joke",
        "fetch",
        "res",
        "json",
        "printJoke",
        "jokes",
        "joke1",
        "joke2",
        "joke3",
        "anyone"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\cahit\\Desktop\\week4\\my-own\\",
      "sourcesContent": [
        "import \"core-js/proposals/promise-any\"\r\nimport * as fetch from 'node-fetch';\r\nimport * as crypto from 'crypto';\r\n\r\nvar secureRandoms = {\r\n    title: '6 secure randoms',\r\n    randoms: []\r\n};\r\n\r\n function makeSecureRandom(size){\r\n    return new Promise((resolve,reject)=>{\r\n        crypto.randomBytes(size, function(err, buffer) {\r\n            let error = false;\r\n            if(error){\r\n              reject(new Error(\"Too Bad\"));\r\n            }\r\n             resolve({length: size, buffer: buffer.toString('hex')});\r\n         });\r\n    })\r\n }\r\n\r\n //using promise(all)\r\n const executeRandomSecurePromises_all =  function execute(){\r\n    Promise.all([makeSecureRandom(48),makeSecureRandom(40),makeSecureRandom(32)])\r\n    .then(dataList=>{\r\n        dataList.forEach(data=>{\r\n            secureRandoms.randoms.push({length: data.length, random:  data.buffer}); \r\n           \r\n        })\r\n        console.log(secureRandoms);\r\n    })\r\n }\r\n\r\n// Using promise(any)\r\n const executeRandomSecurePromises_any =  function execute(){\r\n    const promises = [makeSecureRandom(48),makeSecureRandom(40),makeSecureRandom(32)]\r\n    Promise.any(promises).then((value) => console.log(value));    \r\n }\r\n \r\n\r\n\r\n\r\n function fetchChuckJoke(){\r\n    try{\r\n    let joke =  fetch('https://api.chucknorris.io/jokes/random').then(res =>{ return res.json()});  \r\n    return joke;\r\n    }catch (err) {\r\n     console.log('Error ',err);\r\n    }finally{\r\n     //console.log()\r\n    }   \r\n  }\r\n\r\n\r\n\r\nfunction printJoke() {\r\n    var jokes = [];\r\n    const joke1 = fetchChuckJoke();\r\n    const joke2 = fetchChuckJoke();\r\n    const joke3 = fetchChuckJoke();\r\n    Promise.all([joke1,joke2,joke3])\r\n    .then(dataList=>{\r\n        dataList.forEach(data =>{\r\n            jokes.push(data.value);\r\n        })\r\n        console.log(jokes);\r\n    })\r\n \r\n  }\r\n\r\nlet anyone = () =>{\r\n    const joke1 = fetchChuckJoke();\r\n    const joke2 = fetchChuckJoke();\r\n    const joke3 = fetchChuckJoke();\r\n\r\n    const promises = [joke1,joke2,joke3];\r\n    Promise.any(promises).then((data) => console.log(data.value));\r\n}\r\n\r\n    \r\nprintJoke();\r\nanyone();\r\n\r\n\r\n\r\n\r\n//executeRandomSecurePromises_all();\r\n//executeRandomSecurePromises_any();"
      ]
    },
    "sourceType": "script",
    "mtime": 1600370802172
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\cahit\\\\Desktop\\\\week4\\\\node_with_babel\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\cahit\\\\Desktop\\\\week4\\\\node_with_babel\",\"filename\":\"C:\\\\Users\\\\cahit\\\\Desktop\\\\week4\\\\node_with_babel\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\cahit\\\\Desktop\\\\week4\\\\node_with_babel\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\cahit\\Desktop\\week4\\node_with_babel\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\cahit\\Desktop\\week4\\node_with_babel",
      "filename": "C:\\Users\\cahit\\Desktop\\week4\\node_with_babel\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\cahit\\Desktop\\week4\\node_with_babel",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\cahit\\Desktop\\week4\\node_with_babel\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\cahit\\Desktop\\week4\\node_with_babel\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\cahit\\Desktop\\week4\\node_with_babel\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nrequire(\"core-js/proposals/promise-any\");\n\nvar fetch = _interopRequireWildcard(require(\"node-fetch\"));\n\nvar crypto = _interopRequireWildcard(require(\"crypto\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar secureRandoms = {\n  title: '6 secure randoms',\n  randoms: []\n};\n\nfunction makeSecureRandom(size) {\n  return new Promise(function (resolve, reject) {\n    crypto.randomBytes(size, function (err, buffer) {\n      var error = false;\n\n      if (error) {\n        reject(new Error(\"Too Bad\"));\n      }\n\n      resolve({\n        length: size,\n        buffer: buffer.toString('hex')\n      });\n    });\n  });\n} //using promise(all)\n\n\nvar executeRandomSecurePromises_all = function execute() {\n  Promise.all([makeSecureRandom(48), makeSecureRandom(40), makeSecureRandom(32)]).then(function (dataList) {\n    dataList.forEach(function (data) {\n      secureRandoms.randoms.push({\n        length: data.length,\n        random: data.buffer\n      });\n    });\n    console.log(secureRandoms);\n  });\n}; // Using promise(any)\n\n\nvar executeRandomSecurePromises_any = function execute() {\n  var promises = [makeSecureRandom(48), makeSecureRandom(40), makeSecureRandom(32)];\n  Promise.any(promises).then(function (value) {\n    return console.log(value);\n  });\n};\n\nfunction fetchChuckJoke() {\n  try {\n    var joke = fetch('https://api.chucknorris.io/jokes/random').then(function (res) {\n      return res.json();\n    });\n    return joke;\n  } catch (err) {\n    console.log('Error ', err);\n  } finally {//console.log()\n  }\n}\n\nfunction printJoke() {\n  var jokes = [];\n  var joke1 = fetchChuckJoke();\n  var joke2 = fetchChuckJoke();\n  var joke3 = fetchChuckJoke();\n  Promise.all([joke1, joke2, joke3]).then(function (dataList) {\n    dataList.forEach(function (data) {\n      jokes.push(data.value);\n    });\n    console.log(jokes);\n  });\n}\n\nvar joke_any = function joke_any() {\n  var joke1 = fetchChuckJoke();\n  var joke2 = fetchChuckJoke();\n  var joke3 = fetchChuckJoke();\n  var promises = [joke1, joke2, joke3];\n  Promise.any(promises).then(function (data) {\n    return console.log(data.value);\n  });\n};\n\nexecuteRandomSecurePromises_all();\nexecuteRandomSecurePromises_any();\nprintJoke();\njoke_any(); //you have to run the file using babel.. node node_modules/@babel/node/bin/babel-node index.js\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNlY3VyZVJhbmRvbXMiLCJ0aXRsZSIsInJhbmRvbXMiLCJtYWtlU2VjdXJlUmFuZG9tIiwic2l6ZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiY3J5cHRvIiwicmFuZG9tQnl0ZXMiLCJlcnIiLCJidWZmZXIiLCJlcnJvciIsIkVycm9yIiwibGVuZ3RoIiwidG9TdHJpbmciLCJleGVjdXRlUmFuZG9tU2VjdXJlUHJvbWlzZXNfYWxsIiwiZXhlY3V0ZSIsImFsbCIsInRoZW4iLCJkYXRhTGlzdCIsImZvckVhY2giLCJkYXRhIiwicHVzaCIsInJhbmRvbSIsImNvbnNvbGUiLCJsb2ciLCJleGVjdXRlUmFuZG9tU2VjdXJlUHJvbWlzZXNfYW55IiwicHJvbWlzZXMiLCJhbnkiLCJ2YWx1ZSIsImZldGNoQ2h1Y2tKb2tlIiwiam9rZSIsImZldGNoIiwicmVzIiwianNvbiIsInByaW50Sm9rZSIsImpva2VzIiwiam9rZTEiLCJqb2tlMiIsImpva2UzIiwiam9rZV9hbnkiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsSUFBSUEsYUFBYSxHQUFHO0FBQ2hCQyxFQUFBQSxLQUFLLEVBQUUsa0JBRFM7QUFFaEJDLEVBQUFBLE9BQU8sRUFBRTtBQUZPLENBQXBCOztBQUtDLFNBQVNDLGdCQUFULENBQTBCQyxJQUExQixFQUErQjtBQUM1QixTQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVNDLE1BQVQsRUFBa0I7QUFDakNDLElBQUFBLE1BQU0sQ0FBQ0MsV0FBUCxDQUFtQkwsSUFBbkIsRUFBeUIsVUFBU00sR0FBVCxFQUFjQyxNQUFkLEVBQXNCO0FBQzNDLFVBQUlDLEtBQUssR0FBRyxLQUFaOztBQUNBLFVBQUdBLEtBQUgsRUFBUztBQUNQTCxRQUFBQSxNQUFNLENBQUMsSUFBSU0sS0FBSixDQUFVLFNBQVYsQ0FBRCxDQUFOO0FBQ0Q7O0FBQ0FQLE1BQUFBLE9BQU8s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QWIsQ0FBakI7QUFDQW5DLEVBQUFBLE9BQU8sQ0FBQ3dCLEdBQVIsQ0FBWUQsUUFBWixFQUFzQlQsSUFBdEIsQ0FBMkIsVUFBQ0csSUFBRDtBQUFBLFdBQVVHLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixJQUFJLENBQUNRLEtBQWpCLENBQVY7QUFBQSxHQUEzQjtBQUNILENBUEQ7O0FBVUFkLCtCQUErQjtBQUMvQlcsK0JBQStCO0FBQy9CUyxTQUFTO0FBQ1RLLFFBQVEsRyxDQU1SIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcY2FoaXRcXERlc2t0b3BcXHdlZWs0XFxub2RlX3dpdGhfYmFiZWxcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcImNvcmUtanMvcHJvcG9zYWxzL3Byb21pc2UtYW55XCJcclxuaW1wb3J0ICogYXMgZmV0Y2ggZnJvbSAnbm9kZS1mZXRjaCc7XHJcbmltcG9ydCAqIGFzIGNyeXB0byBmcm9tICdjcnlwdG8nO1xyXG5cclxudmFyIHNlY3VyZVJhbmRvbXMgPSB7XHJcbiAgICB0aXRsZTogJzYgc2VjdXJlIHJhbmRvbXMnLFxyXG4gICAgcmFuZG9tczogW11cclxufTtcclxuXHJcbiBmdW5jdGlvbiBtYWtlU2VjdXJlUmFuZG9tKHNpemUpe1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PntcclxuICAgICAgICBjcnlwdG8ucmFuZG9tQnl0ZXMoc2l6ZSwgZnVuY3Rpb24oZXJyLCBidWZmZXIpIHtcclxuICAgICAgICAgICAgbGV0IGVycm9yID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGlmKGVycm9yKXtcclxuICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKFwiVG9vIEJhZFwiKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgIHJlc29sdmUoe2xlbmd0aDogc2l6ZSwgYnVmZmVyOiBidWZmZXIudG9TdHJpbmcoJ2hleCcpfSk7XHJcbiAgICAgICAgIH0pO1xyXG4gICAgfSlcclxuIH1cclxuXHJcbiAvL3VzaW5nIHByb21pc2UoYWxsKVxyXG4gY29uc3QgZXhlY3V0ZVJhbmRvbVNlY3VyZVByb21pc2VzX2FsbCA9ICBmdW5jdGlvbiBleGVjdXRlKCl7XHJcbiAgICBQcm9taXNlLmFsbChbbWFrZVNlY3VyZVJhbmRvbSg0OCksbWFrZVNlY3VyZVJhbmRvbSg0MCksbWFrZVNlY3VyZVJhbmRvbSgzMildKVxyXG4gICAgLnRoZW4oZGF0YUxpc3Q9PntcclxuICAgICAgICBkYXRhTGlzdC5mb3JFYWNoKGRhdGE9PntcclxuICAgICAgICAgICAgc2VjdXJlUmFuZG9tcy5yYW5kb21zLnB1c2goe2xlbmd0aDogZGF0YS5sZW5ndGgsIHJhbmRvbTogIGRhdGEuYnVmZmVyfSk7IFxyXG4gICAgICAgICAgIFxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgY29uc29sZS5sb2coc2VjdXJlUmFuZG9tcyk7XHJcbiAgICB9KVxyXG4gfVxyXG5cclxuLy8gVXNpbmcgcHJvbWlzZShhbnkpXHJcbiBjb25zdCBleGVjdXRlUmFuZG9tU2VjdXJlUHJvbWlzZXNfYW55ID0gIGZ1bmN0aW9uIGV4ZWN1dGUoKXtcclxuICAgIGNvbnN0IHByb21pc2VzID0gW21ha2VTZWN1cmVSYW5kb20oNDgpLG1ha2VTZWN1cmVSYW5kb20oNDApLG1ha2VTZWN1cmVSYW5kb20oMzIpXVxyXG4gICAgUHJvbWlzZS5hbnkocHJvbWlzZXMpLnRoZW4oKHZhbHVlKSA9PiBjb25zb2xlLmxvZyh2YWx1ZSkpOyAgICBcclxuIH1cclxuIFxyXG5cclxuXHJcblxyXG4gZnVuY3Rpb24gZmV0Y2hDaHVja0pva2UoKXtcclxuICAgIHRyeXtcclxuICAgIGxldCBqb2tlID0gIGZldGNoKCdodHRwczovL2FwaS5jaHVja25vcnJpcy5pby9qb2tlcy9yYW5kb20nKS50aGVuKHJlcyA9PnsgcmV0dXJuIHJlcy5qc29uKCl9KTsgIFxyXG4gICAgcmV0dXJuIGpva2U7XHJcbiAgICB9Y2F0Y2ggKGVycikge1xyXG4gICAgIGNvbnNvbGUubG9nKCdFcnJvciAnLGVycik7XHJcbiAgICB9ZmluYWxseXtcclxuICAgICAvL2NvbnNvbGUubG9nKClcclxuICAgIH0gICBcclxuICB9XHJcblxyXG5cclxuXHJcbmZ1bmN0aW9uIHByaW50Sm9rZSgpIHtcclxuICAgIHZhciBqb2tlcyA9IFtdO1xyXG4gICAgY29uc3Qgam9rZTEgPSBmZXRjaENodWNrSm9rZSgpO1xyXG4gICAgY29uc3Qgam9rZTIgPSBmZXRjaENodWNrSm9rZSgpO1xyXG4gICAgY29uc3Qgam9rZTMgPSBmZXRjaENodWNrSm9rZSgpO1xyXG4gICAgUHJvbWlzZS5hbGwoW2pva2UxLGpva2UyLGpva2UzXSlcclxuICAgIC50aGVuKGRhdGFMaXN0PT57XHJcbiAgICAgICAgZGF0YUxpc3QuZm9yRWFjaChkYXRhID0+e1xyXG4gICAgICAgICAgICBqb2tlcy5wdXNoKGRhdGEudmFsdWUpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgY29uc29sZS5sb2coam9rZXMpO1xyXG4gICAgfSlcclxuIFxyXG4gIH1cclxuXHJcbmxldCBqb2tlX2FueSA9ICgpID0+e1xyXG4gICAgY29uc3Qgam9rZTEgPSBmZXRjaENodWNrSm9rZSgpO1xyXG4gICAgY29uc3Qgam9rZTIgPSBmZXRjaENodWNrSm9rZSgpO1xyXG4gICAgY29uc3Qgam9rZTMgPSBmZXRjaENodWNrSm9rZSgpO1xyXG5cclxuICAgIGNvbnN0IHByb21pc2VzID0gW2pva2UxLGpva2UyLGpva2UzXTtcclxuICAgIFByb21pc2UuYW55KHByb21pc2VzKS50aGVuKChkYXRhKSA9PiBjb25zb2xlLmxvZyhkYXRhLnZhbHVlKSk7XHJcbn1cclxuXHJcblxyXG5leGVjdXRlUmFuZG9tU2VjdXJlUHJvbWlzZXNfYWxsKCk7XHJcbmV4ZWN1dGVSYW5kb21TZWN1cmVQcm9taXNlc19hbnkoKTtcclxucHJpbnRKb2tlKCk7XHJcbmpva2VfYW55KCk7XHJcblxyXG5cclxuXHJcblxyXG5cclxuLy95b3UgaGF2ZSB0byBydW4gdGhlIGZpbGUgdXNpbmcgYmFiZWwuLiBub2RlIG5vZGVfbW9kdWxlcy9AYmFiZWwvbm9kZS9iaW4vYmFiZWwtbm9kZSBpbmRleC5qc1xyXG4gIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "secureRandoms",
        "title",
        "randoms",
        "makeSecureRandom",
        "size",
        "Promise",
        "resolve",
        "reject",
        "crypto",
        "randomBytes",
        "err",
        "buffer",
        "error",
        "Error",
        "length",
        "toString",
        "executeRandomSecurePromises_all",
        "execute",
        "all",
        "then",
        "dataList",
        "forEach",
        "data",
        "push",
        "random",
        "console",
        "log",
        "executeRandomSecurePromises_any",
        "promises",
        "any",
        "value",
        "fetchChuckJoke",
        "joke",
        "fetch",
        "res",
        "json",
        "printJoke",
        "jokes",
        "joke1",
        "joke2",
        "joke3",
        "joke_any"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\cahit\\Desktop\\week4\\node_with_babel\\",
      "sourcesContent": [
        "import \"core-js/proposals/promise-any\"\r\nimport * as fetch from 'node-fetch';\r\nimport * as crypto from 'crypto';\r\n\r\nvar secureRandoms = {\r\n    title: '6 secure randoms',\r\n    randoms: []\r\n};\r\n\r\n function makeSecureRandom(size){\r\n    return new Promise((resolve,reject)=>{\r\n        crypto.randomBytes(size, function(err, buffer) {\r\n            let error = false;\r\n            if(error){\r\n              reject(new Error(\"Too Bad\"));\r\n            }\r\n             resolve({length: size, buffer: buffer.toString('hex')});\r\n         });\r\n    })\r\n }\r\n\r\n //using promise(all)\r\n const executeRandomSecurePromises_all =  function execute(){\r\n    Promise.all([makeSecureRandom(48),makeSecureRandom(40),makeSecureRandom(32)])\r\n    .then(dataList=>{\r\n        dataList.forEach(data=>{\r\n            secureRandoms.randoms.push({length: data.length, random:  data.buffer}); \r\n           \r\n        })\r\n        console.log(secureRandoms);\r\n    })\r\n }\r\n\r\n// Using promise(any)\r\n const executeRandomSecurePromises_any =  function execute(){\r\n    const promises = [makeSecureRandom(48),makeSecureRandom(40),makeSecureRandom(32)]\r\n    Promise.any(promises).then((value) => console.log(value));    \r\n }\r\n \r\n\r\n\r\n\r\n function fetchChuckJoke(){\r\n    try{\r\n    let joke =  fetch('https://api.chucknorris.io/jokes/random').then(res =>{ return res.json()});  \r\n    return joke;\r\n    }catch (err) {\r\n     console.log('Error ',err);\r\n    }finally{\r\n     //console.log()\r\n    }   \r\n  }\r\n\r\n\r\n\r\nfunction printJoke() {\r\n    var jokes = [];\r\n    const joke1 = fetchChuckJoke();\r\n    const joke2 = fetchChuckJoke();\r\n    const joke3 = fetchChuckJoke();\r\n    Promise.all([joke1,joke2,joke3])\r\n    .then(dataList=>{\r\n        dataList.forEach(data =>{\r\n            jokes.push(data.value);\r\n        })\r\n        console.log(jokes);\r\n    })\r\n \r\n  }\r\n\r\nlet joke_any = () =>{\r\n    const joke1 = fetchChuckJoke();\r\n    const joke2 = fetchChuckJoke();\r\n    const joke3 = fetchChuckJoke();\r\n\r\n    const promises = [joke1,joke2,joke3];\r\n    Promise.any(promises).then((data) => console.log(data.value));\r\n}\r\n\r\n\r\nexecuteRandomSecurePromises_all();\r\nexecuteRandomSecurePromises_any();\r\nprintJoke();\r\njoke_any();\r\n\r\n\r\n\r\n\r\n\r\n//you have to run the file using babel.. node node_modules/@babel/node/bin/babel-node index.js\r\n "
      ]
    },
    "sourceType": "script",
    "mtime": 1600439011118
  }
}